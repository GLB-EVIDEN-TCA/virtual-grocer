name: Build and Deploy Virtual Grocer application to Azure
on: [push]
env:
  AZURE_WEBAPP_PACKAGE_PATH: ./published
  AZURE_TEMPLATE_PATH: ./template
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 7.0.x
  WORKING_DIRECTORY: ./src
jobs:
  build-arm-template:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Validate Bicep file
      - name: Validate
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./deployment/main.bicep
          #parameters: "storagePrefix=mystore storageSKU=Standard_LRS"
          failOnStdErr: true
          deploymentMode: "Validate"
          deploymentName: "virtual-grocer-deployment"

      # Build ARM template
      - name: Build
        uses: azure/cli@v1
        with:
          inlineScript: |
            #!/bin/bash
            mkdir -p ${{ env.AZURE_TEMPLATE_PATH }}
            az bicep build --file ./deployment/main.bicep --outfile "${{ env.AZURE_TEMPLATE_PATH }}/EvidenVirtualGrocer.json"
            az bicep generate-params --file ./deployment/main.bicep --outfile "${{ env.AZURE_TEMPLATE_PATH }}/EvidenVirtualGrocer.json"

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: template
          path: ${{ env.AZURE_TEMPLATE_PATH }}
  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
      - name: Restore
        run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
      - name: Build
        run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
      - name: Test
        run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
      - name: Publish
        run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  deploy-infra:
    #if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-arm-template, build-app]
    steps:
      # Checkout code
      - uses: actions/checkout@v3

      # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep file
      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./deployment/main.bicep
          #parameters: "storagePrefix=mystore storageSKU=Standard_LRS"
          failOnStdErr: true
          deploymentMode: "Incremental"
          deploymentName: "virtual-grocer-deployment"
    outputs:
      appServiceName: ${{ steps.deploy.outputs.appServiceName }}
  deploy-app:
    #if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-app, deploy-infra]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy-infra.outputs.appServiceName }} 
          #publish-profile: ${{ secrets.virtual_grocer_app_75AD }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
